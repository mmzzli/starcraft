import{I as e,S as n,a as t,b as r,c as a,P as o,B as c,E as i,d as s,e as d}from"../starcraft-core/starcraft-core.a7e8a7b2.js";import{u}from"../ethers/ethers.7357afd8.js";import{aL as f,aM as B}from"../@ethersproject/@ethersproject.82fce948.js";import{A as C,I as p}from"../@apollo/@apollo.167459d8.js";import{g as b}from"../graphql-tag/graphql-tag.47c56ce3.js";function h(e){return"production"===(e||"production")?{SCT:"0x7A27F0419289d703896877594B93a023828585e4",SCP:"0x2D03AE9501a6e10299eaf0C035Fb7766b5bFDdA3",SCF:"0x3DF7bec1746AD1a5Ed404D8DCe9786F09734c086",FUEL:"0x3DD0623c9e2DC16fA9d4280006C0462e646a034a",ADFUEL:"0xC6962A56A58D3FC2c8c0Fbe38100B27699A6df4F",FILW:"0x910D48c7212fF50e19849C39c245b6f5bA83c72A",L3:"0x7b97bCfC11054F1cF2e07dE9a9C449677E64DeA8",USDT:"0x55d398326f99059fF775485246999027B3197955"}:{SCT:"0x66513ada3c2A47805307006649218f098a207b53",SCP:"0xB9c521615E7A5fa6B7694422790c354BaC9e78Af",SCF:"0x5cEb789d037e35b4DAE1E7fEF474e73F49042901",FUEL:"0xB17C55a3255710be2253B52011c1C7372DF39E7B",ADFUEL:"0xFAab7D1882351BC4099b02EA432Ec64b1496a7aa",FILW:"0x5319395c1AA841365293B11473AB2cd72644fE2D",L3:"0x21BE1d43Ca69EE0E978aD4d1807Da2feE29D23d4",USDT:"0xC773BA32c3b0fB39362B3D8AE8e3db137FD7f040"}}function A(e){return"production"===(e||"production")?{Inviting:"0x21353e042119512bA36bC83647224B94c0455fd7",Shop:"0x3FafA355374A231008A3eD7C62e690dBeed3170C",Shop2:"0xA8F4765693905cAB7752226018D6b2d41567b9b0",SCPBox:"0x6170461B89b44c2Baab9A542172C564870b2d349",SCPBox2:"0xF9507d5524343c4a18c7b2c62Bc39Bf3949BCB07",SCFBox:"0x16A562328BB854Ce4A6A4622fCf9954b21194f21",PlanetPool:"0x206707B2cC8AE6DDC2D24278Eb0Ee72e25374111",BuyNode:"0x4dc0796E28E62E6A54f605480893Cc140Af3136E",Airdrop:"0x21cA829787ff4E638fCAef5B6809A85e8F22ad3E"}:{Inviting:"0x6C43aD6b8DCe5F553Bf3b42fED8F181F19f2Ec57",Shop:"0x63295f6348b620d9cF6006B4CD8103803FA5F6e1",Shop2:"0x8d48D46CaA4ef5368ffEb8458B53eF3c26E2077C",SCPBox:"0x20c05d568D4360c77Da8E91120b0793472FF0577",SCPBox2:"",SCFBox:"0xdB5496c69867dA1De65a6711735D70B7Ced42931",PlanetPool:"0xFA24fbE911Bb94Ab70737F38e69947074d7B65C6",BuyNode:"0x64308c8abFD55E81F88369AD098c8318a84f3AB1",Airdrop:""}}function D(e){return"production"===(e||"production")?{chainId:"0x38",chainName:"BSC-Mainnet",rpcUrls:["https://bsc-dataseed4.ninicoin.io/"]}:{chainId:"0x61",chainName:"BSC-Testnet",rpcUrls:["https://data-seed-prebsc-1-s1.binance.org:8545/"]}}const l=u,F=new f(D().rpcUrls[0]);let x=E(localStorage.getItem("walletType"));function E(e){let n;return n="walletconnect"==e?window[e||"ethereum"]:window[e&&"metamask"!=e?e:"ethereum"],n}const g={getCurrentAccount:async()=>await x.request({method:"eth_accounts"}),getAccount:async e=>(x=E(e),localStorage.setItem("walletType",e||"metamask"),"walletconnect"==e?await x.enable():await x.request({method:"eth_requestAccounts"})),getChainId:async()=>await x.request({method:"eth_chainId"}),addChain:async()=>await x.request({method:"wallet_addEthereumChain",params:[D()]}),disconnect:async()=>await x.disconnect(),onAccountChanged:e=>{x.on("accountsChanged",e)},onChainChanged:e=>{x.on("chainChanged",e)},onDisconnect:e=>{x.on("disconnect",e)}};function m(){return new B(x)}function $(){return new B(x).getSigner()}const S=new C({uri:"https://api.thegraph.com/subgraphs/name/sealemlab/starcraft-inviting",cache:new p});function y(){return e.connect(A().Inviting,F)}const w={getBindInfos:async(e,n,t,r,a,o)=>{const c=`\n      query($first: Int, $skip: Int, $orderBy: BigInt, $orderDirection: String, $inviter: String, $user: String) {\n        bindInfos(\n          first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDirection,\n          where: {${a?"inviter: $inviter,":""} ${o?"user: $user,":""}}\n        ) {\n          inviter\n          user\n          type\n          timestamp\n          hash\n        }\n      }\n    `;return await S.query({query:b(c),variables:{first:e,skip:n,orderBy:t,orderDirection:r,inviter:a,user:o}})},getCounters:async(e,n,t,r,a)=>{const o=`\n      query($first: Int, $skip: Int, $orderBy: BigInt, $orderDirection: String, $inviter: String) {\n        counters(\n          first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDirection,\n          where: {${a?"inviter: $inviter,":""}}\n        ) {\n          inviter\n          usersCount\n          directCount\n          indirectCount\n        }\n      }\n    `;return await S.query({query:b(o),variables:{first:e,skip:n,orderBy:t,orderDirection:r,inviter:a}})}};function I(){return n.connect(A().Shop,F)}function k(){return t.connect(A().SCPBox,F)}function v(){return r.connect(A().SCPBox2,F)}function q(){return a.connect(A().SCFBox,F)}const P=new C({uri:"https://api.thegraph.com/subgraphs/name/sealemlab/planet-pool",cache:new p});function L(){return o.connect(A().PlanetPool,F)}const U={getHarvestInfos:async(e,n,t,r,a,o)=>{const c=`\n      query($first: Int, $skip: Int, $orderBy: BigInt, $orderDirection: String, $user: String, $block: Int) {\n        harvestInfos(\n          first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDirection, ${o?"block: { number: $block },":""}\n          where: {${a?"user: $user,":""}}\n        ) {\n          timestamp\n          hash\n          user\n          amount\n        }\n      }\n    `;return await P.query({query:b(c),variables:{first:e,skip:n,orderBy:t,orderDirection:r,user:a,block:o}})}};function j(){return c.connect(A().BuyNode,F)}function T(e){return i.connect(e,F)}function N(){return s.connect(h().SCP,F)}function _(){return d.connect(h().SCF,F)}export{k as a,j as b,A as c,v as d,T as e,q as f,$ as g,I as h,y as i,w as j,_ as k,m as l,U as m,D as n,L as p,F as r,N as s,h as t,l as u,g as w};
